package main

import (
	"bytes"
	"fmt"
	"go/format"
	"io/ioutil"
	"log"
	"os"
	"path/filepath"
)

func main() {
	if len(os.Args) < 2 {
		log.Fatal("usage: bin2go file1 file2 ...")
	}
	for _, name := range os.Args[1:] {
		src, err := ioutil.ReadFile(name)
		if err != nil {
			log.Fatal(err)
		}

		b := new(bytes.Buffer)
		fmt.Fprintf(b, "// generated by bin2go\n\n")
		fmt.Fprintf(b, "package data\n\n")
		fmt.Fprintf(b, "// data is content of file %s\n", filepath.Base(name))
		fmt.Fprintf(b, "var data = []byte{")
		for i, x := range src {
			if i&15 == 0 {
				b.WriteByte('\n')
			}
			fmt.Fprintf(b, "%#02x,", x)
		}
		fmt.Fprintf(b, "\n}\n")

		dst, err := format.Source(b.Bytes())
		if err != nil {
			log.Fatal(err)
		}
		if err := ioutil.WriteFile(name+".go", dst, 0666); err != nil {
			log.Fatal(err)
		}
	}
}
